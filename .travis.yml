language: python
sudo: required

env:
  global:
    - OFFICIAL_REPO="slaclab/timechart"
    # Doctr deploy key for slaclab/timechart
    #- secure: "ZpbEFHUMVvNorSL19HMT7MD7D4/0q3tk3uyeNqzfVQE0tH0RM437AApZEQ35C4ndKeu97s9uY+Ajs9jfy1N2d/HcApP+n33EX+ufdPbYIL/7eUJnU8yu7paWII1oka76gkQMrJJvVhLzhDa5JtUhs/WR6LmBmYMucKRXaN9UFpwQ13WmNxbHEd71TyY4eYRhq4CNR0JYXKPcl7qVEt3GJ8OG9s71qamyBbCdkZFOylbcKJ0PVVi9OX/UrDarRBQgN7XmUptHocED6kjvmrhjqxg4aZ5c8v+9t00o8dMxHTXituuadcGDhYuic8ZVLm0v6dZxH7fK1hgXxY9t0gWvYv/PSIN7FME5tU9DcTfC36UtMCN5Jkz1ohH5PSJ2AeTeM/akfeiTxusQWrqIWNt32i8HlZvqtUK3Iss9SGQIrgGeusu5S4TqjUb6hgbkDlQmpZ3KqOcoRk/8rBKIfOoqJSs3m5qg0v5Zz95V07K+wsTNuMO0Zb5El+BCHcLGIFleu+m73qxJ1byz0sQhcqAaUt3y3kzxIwOYSOqYJQLCIHXnnFZyIcow6KJZQYO2ib78fpZmNoeXjoO2rA9ZziJuU/nyKKQncJSdKEAplUFG2Uir9r0aRitCsfjtgrUh9fj/n3OXOas8gS0VJ+F4SQUkrhgSwOsFilB4xzHeGYNz/i0="

matrix:
  include:
    - python: 2.7
      env: PYDM_CHANNEL=pydm-tag
    - python: 3.6
      env: PYDM_CHANNEL=pydm-tag
    - python: 3.7
      dist: xenial
      env: PYDM_CHANNEL=pydm-tag

install:
  - sudo apt-get update
  # Install windows manager
  - sudo apt-get install -y xvfb herbstluftwm
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda install conda-build anaconda-client
  - conda update -q conda conda-build
  - conda config --add channels $PYDM_CHANNEL
  - conda config --append channels pydm-tag
  - conda config --append channels conda-forge
  # Useful for debugging any issues with conda
  - conda info -a
  # Grab all dependencies
  - conda build -q conda-recipe --python=$TRAVIS_PYTHON_VERSION --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION timechart --file dev-requirements.txt
  # Launch Conda environment
  - source activate test-environment

before_script:
  # Taken from docs.travis-ci.com/user/gui-and-headless-browsers
  - "export DISPLAY=:99.0"
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset"
  - sleep 3 # give xvfb some time to start
  # Run windows manager
  - "herbstluftwm &"
  - sleep 1

script:
  - coverage run run_tests.py --disable-warnings
  - coverage report -m
  # Build docs
  - set -e
  - |
    if [[ -n "$DOCTR_DEPLOY_ENCRYPTION_KEY" && $BUILD ]]; then
      # Create HTML documentation
      pushd docs
      make html
      popd
      #Publish docs.
      doctr deploy . --built-docs docs/build/html --deploy-branch-name gh-pages
    fi
after_success:
  - codecov
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' && $BUILD ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_TAG
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == 'master' && $BUILD ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_DEV
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
after_failure:
  - cat logs/run_tests_log.txt
